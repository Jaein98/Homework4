knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE)
install.packages('tidyverse', repos = "http://cran.us.r-project.org")
#install.packages('tidymodels', repos = "http://cran.us.r-project.org")
install.packages('ggplot2', repos = "http://cran.us.r-project.org")
install.packages('visdat', repos = "http://cran.us.r-project.org")
install.packages("corrplot", repos = "http://cran.us.r-project.org")
install.packages('tidyverse', repos = "http://cran.us.r-project.org")
data_split <- initial_split(data, prop = 0.70,
strata = survived)
install.packages('tidyverse', repos = "http://cran.us.r-project.org")
#install.packages('tidymodels', repos = "http://cran.us.r-project.org")
install.packages('ggplot2', repos = "http://cran.us.r-project.org")
install.packages('visdat', repos = "http://cran.us.r-project.org")
install.packages("corrplot", repos = "http://cran.us.r-project.org")
install.packages("discrim", repos = "http://cran.us.r-project.org")
install.packages("rlang", repos = "http://cran.us.r-project.org")
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data_split <- initial_split(data, prop = 0.70,
strata = survived)
titanic_train <- training(data_split)
titanic_test <- testing(data_split)
print(c(dim(titanic_train), dim(titanic_test)))
cv_folds <- vfold_cv(titanic_train, v = 10)
cv_folds
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
knitr::opts_chunk$set(echo = TRUE)
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data_split <- initial_split(data, prop = 0.70,
strata = survived)
titanic_train <- training(data_split)
titanic_test <- testing(data_split)
print(c(dim(titanic_train), dim(titanic_test)))
cv_folds <- vfold_cv(titanic_train, v = 10)
cv_folds
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
set.seed(231)
data = read.csv('data/titanic.csv')
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data
set.seed(231)
data = read.csv('data/titanic.csv')
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(231)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data
data_split <- initial_split(data, prop = 0.70,
strata = survived)
titanic_train <- training(data_split)
titanic_test <- testing(data_split)
print(c(dim(titanic_train), dim(titanic_test)))
cv_folds <- vfold_cv(titanic_train, v = 10)
cv_folds
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(580)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
set.seed(580)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data
library(rlang)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
library(rlang)
set.seed(580)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data
data_split <- initial_split(data, prop = 0.70,
strata = survived)
titanic_train <- training(data_split)
titanic_test <- testing(data_split)
print(c(dim(titanic_train), dim(titanic_test)))
cv_folds <- vfold_cv(titanic_train, v = 10)
cv_folds
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = data_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = titanic_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Logistic
log_reg = logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
log_wkflow = workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit = fit(log_wkflow, titanic_train)
#LDA
lda_mod = discrim_linear() %>%
set_engine("MASS") %>%
set_mode("classification")
lda_wkflow = workflow() %>%
add_model(lda_mod) %>%
add_recipe(titanic_recipe)
lda_fit = fit(lda_wkflow, titanic_train)
#QDA
qda_mod = discrim_quad() %>%
set_mode("classification") %>%
set_engine("MASS")
qda_wkflow = workflow() %>%
add_model(qda_mod) %>%
add_recipe(titanic_recipe)
qda_fit = fit(qda_wkflow, titanic_train)
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = titanic_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Logistic
log_reg = logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
log_wkflow = workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit = fit(log_wkflow, titanic_train)
#LDA
lda_mod = discrim_linear() %>%
set_engine("MASS") %>%
set_mode("classification")
lda_wkflow = workflow() %>%
add_model(lda_mod) %>%
add_recipe(titanic_recipe)
lda_fit = fit(lda_wkflow, titanic_train)
#QDA
qda_mod = discrim_quad() %>%
set_mode("classification") %>%
set_engine("MASS")
qda_wkflow = workflow() %>%
add_model(qda_mod) %>%
add_recipe(titanic_recipe)
qda_fit = fit(qda_wkflow, titanic_train)
log_fit
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = titanic_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Logistic
log_reg = logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
log_wkflow = workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit = fit(log_wkflow, titanic_train)
#LDA
lda_mod = discrim_linear() %>%
set_engine("MASS") %>%
set_mode("classification")
lda_wkflow = workflow() %>%
add_model(lda_mod) %>%
add_recipe(titanic_recipe)
lda_fit = fit(lda_wkflow, titanic_train)
#QDA
qda_mod = discrim_quad() %>%
set_mode("classification") %>%
set_engine("MASS")
qda_wkflow = workflow() %>%
add_model(qda_mod) %>%
add_recipe(titanic_recipe)
qda_fit = fit(qda_wkflow, titanic_train)
log_fit
lda_fit
qda_fit
log_res = log_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
lda_res = lda_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
qda_res = qda_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
log_res = log_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
lda_res = lda_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
qda_res = qda_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
collect_metrics(log_res)
collect_metrics(lda_res)
collect_metrics(qda_res)
log_fit = fit(log_wkflow, titanic_train)
log_fit = fit(log_wkflow, titanic_train)
log_fit
predict(log_fit, new_data = titanic_test, type = "prob")
predict(log_fit, new_data = titanic_test, type = "prob")
log_acc = augment(log_fit, new_data = titanic_test) %>%
accuracy(truth = survived, estimate = .pred_class)
log_acc
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(visdat)
library(corrplot)
library(discrim)
library(klaR)
library(yardstick)
library(rlang)
set.seed(580)
data = read.csv('data/titanic.csv')
data$survived = factor(data$survived, levels = c('Yes', 'No'))
data$pclass = factor(data$pclass)
data
data_split <- initial_split(data, prop = 0.70,
strata = survived)
titanic_train <- training(data_split)
titanic_test <- testing(data_split)
print(c(dim(titanic_train), dim(titanic_test)))
cv_folds <- vfold_cv(titanic_train, v = 10)
cv_folds
#Recipe
titanic_recipe = recipe(survived ~ pclass + sex + age + sib_sp + parch + fare,
data = titanic_train) %>%
step_impute_linear(age) %>%
step_dummy(all_nominal_predictors()) %>%
step_interact(terms = ~ starts_with("sex"):fare + age:fare)
#Logistic
log_reg = logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
log_wkflow = workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit = fit(log_wkflow, titanic_train)
#LDA
lda_mod = discrim_linear() %>%
set_engine("MASS") %>%
set_mode("classification")
lda_wkflow = workflow() %>%
add_model(lda_mod) %>%
add_recipe(titanic_recipe)
lda_fit = fit(lda_wkflow, titanic_train)
#QDA
qda_mod = discrim_quad() %>%
set_mode("classification") %>%
set_engine("MASS")
qda_wkflow = workflow() %>%
add_model(qda_mod) %>%
add_recipe(titanic_recipe)
qda_fit = fit(qda_wkflow, titanic_train)
log_fit
lda_fit
qda_fit
log_res = log_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
lda_res = lda_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
qda_res = qda_wkflow %>%
fit_resamples(resamples = cv_folds,
metrics = metric_set(recall, precision,
accuracy, sens, spec, roc_auc),
control = control_resamples(save_pred = TRUE))
collect_metrics(log_res)
collect_metrics(lda_res)
collect_metrics(qda_res)
log_fit = fit(log_wkflow, titanic_train)
log_fit
predict(log_fit, new_data = titanic_test, type = "prob")
log_acc = augment(log_fit, new_data = titanic_test) %>%
accuracy(truth = survived, estimate = .pred_class)
log_acc
